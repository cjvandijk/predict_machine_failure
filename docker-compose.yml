volumes:
  grafana_data: {}
networks:
  front-tier:
  back-tier:
  app-network:
    driver: bridge
services:
  magic:
    image: mageai/mageai:latest
    working_dir: /home/src/magic_context
    command: mage start --project-uuid 6164c8a97a5e48aea8c28ea5ef078b4a ${PROJECT_NAME}
    env_file:
      - .env
    build:
      context: ./magic_context
      dockerfile: Dockerfile
    environment:
      USER_CODE_PATH: $MAGE_CODE_PATH/${PROJECT_NAME}
      ENV: dev
      MLFLOW_TRACKING_URI: http://mlflow:5000
    ports:
      - 6789:6789
    volumes:
      - .:/home/src/
      - ./models:$MAGE_CODE_PATH/models
      # Store the data output on local machine for easier debugging
      - ~/.mage_data:/$MAGE_CODE_PATH/mage_data
      # IAM user credentials
      - ~/.aws:/root/.aws
      # Local machineâ€™s SSH keys
      - ~/.ssh:/root/.ssh:ro
    restart: on-failure:5
    networks:
      app-network:
        aliases:
          - mlflow
    depends_on:
      - magic-database
    stdin_open: true # for interactive debugging
    tty: true # for interactive debugging
  magic-database:
    image: pgvector/pgvector:0.6.0-pg16
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - ~/.postgres/data:/var/lib/postgresql/data
      # Custom database initialization scripts
      - ./scripts/database:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - app-network
  mlflow:
    build:
      context: ./mlflow_context
      dockerfile: mlflow.dockerfile
    ports:
      - "5000:5000"
    volumes:
      - "${PWD}/mlflow_data:/home/mlflow_data/"
      - "${PWD}/models:/models/"
    networks:
      - app-network
  prediction-webservice:
    build:
      context: .
      dockerfile: predict_service_context/predictservice.dockerfile
    ports:
      - "9696:9696"
    networks:
      - app-network
  localstack:
    image: localstack/localstack:s3-latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - S3_ENDPOINT_URL=http://localstack:4566/
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example   # environment variable
    ports:
      - "5433:5433"
    networks:
      - back-tier   # only operate here because we won't access from browser
  # adminer:  # manages db content, works natively with postgres
  #   image: adminer
  #   restart: always
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - back-tier
  #     - front-tier
  # grafana:
  #   image: grafana/grafana
  #   user: "472"
  #   ports:
  #     - "3000:3000"
  #   volumes:  # datasources.yaml shows where to access data source
  #     - ./config/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
  #     - ./config/grafana_dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
  #     - ./dashboards:/opt/grafana/dashboards
  #   networks:
  #     - back-tier    # to communicate with database
  #     - front-tier   # to access dashboard from browser
  #   restart: always
